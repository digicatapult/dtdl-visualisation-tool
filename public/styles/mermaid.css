/* Flowchart diagramType in mermaid use rect where as ClassDiagram uses path */
#mermaid-svg g.node path {
  fill: #ffffff;
  stroke: #000000;
  stroke-width: unset;
}
#mermaid-svg g.node rect {
  transition: outline 10.1s ease-in-out;
  stroke: none;
  fill: #ffffff;
}

#mermaid-svg g.node[highlighted] path,
#mermaid-svg g.node[highlighted] rect {
  fill: #fbf291;
}

/* make it so markers colors match those of their lines (note the duplicate class to increase specificity) */
#mermaid-svg .marker.marker {
  stroke: context-stroke !important;
  fill: context-fill !important;
}
/* color paths based on their highlighted state */
#mermaid-svg g.edges > path,
#mermaid-svg g.edgePaths > path {
  fill-opacity: 0;
}
#mermaid-svg g.edges > path:not([highlighted]),
#mermaid-svg g.edgePaths > path:not([highlighted]) {
  stroke: #333333;
  fill: #333333;
}
#mermaid-svg g.edgePaths > path[highlighted],
#mermaid-svg g.edgePaths > path[highlighted] {
  stroke: red;
  fill: red;
}
#mermaid-svg g.edgeLabel[highlighted] .text-inner-tspan {
  fill: red;
}
#mermaid-svg g[clickable]:hover {
  cursor: pointer;
}

g.node path,
g.node.search path {
  stroke-dasharray: 5, 5;
}
g.node rect,
g.node.search rect {
  outline: 2px dashed #000000;
}

g.node.unexpanded path,
g.node.expanded path {
  stroke: #000000;
  stroke-dasharray: none;
  stroke-width: 3px;
}
g.node.unexpanded rect,
g.node.expanded rect {
  outline: 3px solid #000000;
}

.corner-sign {
  text-anchor: end;
  font-size: 1.7rem;
}

text.corner-sign:hover {
  transition: 0.25s;
  fill: red;
}
text.corner-sign::after {
  transform: translate();
  fill: red;
}
