name: Lint and Test

on:
  push:
    branches-ignore: ['main']

jobs:
  static-checks-npm:
    uses: digicatapult/shared-workflows/.github/workflows/static-checks-npm.yml@main
    with:
      matrix_commands: '["lint", "depcheck", "check", "xss-scan"]'

  tests-npm:
    uses: digicatapult/shared-workflows/.github/workflows/tests-npm.yml@main
    with:
      docker_compose_file: ''
      npm_build_command: 'npm run build'
      pre_test_command: |
        export CHROME_PUPPETEER_PATH=/@{HOME}/.cache/puppeteer/chrome/**/**/chrome
        cat | sudo tee /etc/apparmor.d/chrome-puppeteer <<EOF
        abi <abi/4.0>,
        include <tunables/global>

        profile chrome $CHROME_PUPPETEER_PATH flags=(unconfined) {
          userns,

          # Site-specific additions and overrides. See local/README for details.
          include if exists <local/chrome>
        }
        EOF
        sudo service apparmor reload  # reload AppArmor profiles to include the new one
      env_vars: |
        {
          "TMPDIR": "${{ github.workspace }}"
        }

  # e2e-tests-npm:
  #   uses: digicatapult/shared-workflows/.github/workflows/tests-e2e-npm.yml@main
  #   with:
  #     docker_compose_file: ''
  #     pre_test_command: 'npm ci && npx playwright install-deps && npx playwright install'
  #     test_command: 'npm run test:playwright || exit 1'
  #   permissions:
  #     contents: write

  build-docker:
    uses: digicatapult/shared-workflows/.github/workflows/build-docker.yml@main
    permissions:
      packages: write
      contents: write
  
  test-testcontainers:
    name: Run tests
    strategy:
      fail-fast: false
      matrix:
        command: ['test:unit', 'test:integration']
    runs-on: macos-14
    steps:
      - name: install docker
        run: |
          brew install docker
          brew install docker-compose
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install Packages
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run tests
        run: npm run ${{ matrix.command }}
