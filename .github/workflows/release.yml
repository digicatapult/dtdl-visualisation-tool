name: Release

on:
  push:

env:
  ACTIONS_RUNNER_DEBUG: true

jobs:
  # static-checks-npm:
  #   uses: digicatapult/shared-workflows/.github/workflows/static-checks-npm.yml@main
  #   with:
  #     matrix_commands: '["lint", "depcheck", "check", "xss-scan"]'

  # tests-npm:
  #   uses: digicatapult/shared-workflows/.github/workflows/tests-npm.yml@main
  #   with:
  #     docker_compose_file: ''
  #     npm_build_command: 'npm run build'
  #     tests:  '["test:unit"]'

  # e2e-tests-npm:
  #   uses: digicatapult/shared-workflows/.github/workflows/tests-e2e-npm.yml@main
  #   with:
  #     docker_compose_file: ''
  #     pre_test_command: 'npm ci && npx playwright install-deps && npx playwright install'
  #     test_command: 'npm run test:playwright || exit 1'
  #   permissions:
  #     contents: write

  # build-docker:
  #   needs: [e2e-tests-npm, tests-npm, static-checks-npm]
  #   uses: digicatapult/shared-workflows/.github/workflows/build-docker.yml@main
  #   with:
  #     push_dockerhub: false
  #     push_ghcr: false
  #   permissions:
  #     packages: write
  #     contents: write

  release:
    permissions: write-all
    name: 'Release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set environment variables from JSON
        env:
          ENV_VARS_JSON: "${{ inputs.env_vars }}"
        run: |
          echo "Parsing JSON environment variables..."
          echo "$ENV_VARS_JSON" | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' >> $GITHUB_ENV
      - id: get_version
        uses: digicatapult/check-version@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build release version
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: ${{ steps.get_version.outputs.version }}
          prerelease: false
          title: Release ${{ steps.get-version.outputs.version }}
      - name: Build release latest
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: latest
          prerelease: false
          title: Latest Release ${{ steps.get-version.outputs.version }}
