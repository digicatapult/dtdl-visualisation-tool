name: Check deployment

on:
  push:
  workflow_dispatch:
  repository_dispatch:
    types: [deployment]

jobs:
  get-repo-version:
    name: 'Get repo version'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.VERSION }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Fetch all tags
        run: |
          git fetch --tags

      - name: Get latest semver tag
        id: get-version
        run: |
          VERSION=$(git tag -l | sort -V | tail -n 1)
          
          VERSION="${VERSION#v}"
          
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Latest tag version: $VERSION"

  get-deployed-version:
    name: 'Get deployed version'
    runs-on: ubuntu-latest
    needs: get-repo-version
    outputs:
      deployed_version: ${{ steps.check.outputs.DEPLOYED_VERSION }}
    steps:
      - name: Check deployed health endpoint
        id: check
        env:
          BASE_URL: ${{ secrets.DEPLOYED_BASE_URL}}
        run: |
          RESPONSE=$(curl -s "$BASE_URL/api/health")
          DEPLOYED_VERSION=$(echo "$RESPONSE" | jq -r '.version')

          if [ $? -ne 0 ]; then
            echo "Error: Failed to extract version from response."
            echo "Full response: $RESPONSE"
            exit 1
          fi

          echo "DEPLOYED_VERSION=$DEPLOYED_VERSION" >> $GITHUB_OUTPUT
          echo "Deployed version: $DEPLOYED_VERSION"

  test:
    runs-on: ubuntu-latest
    needs: [get-repo-version, get-deployed-version]
    if: needs.get-deployed-version.outputs.deployed_version == needs.get-repo-version.outputs.version
    steps:
      - name: Print versions
        run: |
          echo "Latest tag version: ${{ needs.get-repo-version.outputs.version }}"
          echo "Deployed version: ${{ needs.get-deployed-version.outputs.deployed_version }}"
      
      - name: Run success tests
        run: echo "Success - versions match"